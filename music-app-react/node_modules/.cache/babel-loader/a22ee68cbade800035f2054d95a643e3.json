{"ast":null,"code":"'use strict';\n\nconst errcode = require('err-code');\n\nconst uint8ArrayToString = require('uint8arrays/to-string');\n\nconst uint8ArrayFromString = require('uint8arrays/from-string');\n\nconst namespace = '/record/';\n\nmodule.exports.encodeBase32 = buf => {\n  return uint8ArrayToString(buf, 'base32');\n}; // converts a binary record key to a pubsub topic key.\n\n\nmodule.exports.keyToTopic = key => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key);\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url');\n  return `${namespace}${b64url}`;\n}; // converts a pubsub topic key to a binary record key.\n\n\nmodule.exports.topicToKey = topic => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE');\n  }\n\n  const key = topic.substring(namespace.length);\n  return uint8ArrayFromString(key, 'base64url');\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/datastore-pubsub/src/utils.js"],"names":["errcode","require","uint8ArrayToString","uint8ArrayFromString","namespace","module","exports","encodeBase32","buf","keyToTopic","key","String","b64url","topicToKey","topic","substring","length","Error"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,uBAAD,CAAlC;;AACA,MAAME,oBAAoB,GAAGF,OAAO,CAAC,yBAAD,CAApC;;AAEA,MAAMG,SAAS,GAAG,UAAlB;;AAEAC,MAAM,CAACC,OAAP,CAAeC,YAAf,GAA+BC,GAAD,IAAS;AACrC,SAAON,kBAAkB,CAACM,GAAD,EAAM,QAAN,CAAzB;AACD,CAFD,C,CAIA;;;AACAH,MAAM,CAACC,OAAP,CAAeG,UAAf,GAA6BC,GAAD,IAAS;AACnC;AACA;AACA,MAAI,OAAOA,GAAP,KAAe,QAAf,IAA2BA,GAAG,YAAYC,MAA9C,EAAsD;AACpDD,IAAAA,GAAG,GAAGP,oBAAoB,CAACO,GAAD,CAA1B;AACD;;AAED,QAAME,MAAM,GAAGV,kBAAkB,CAACQ,GAAD,EAAM,WAAN,CAAjC;AAEA,SAAQ,GAAEN,SAAU,GAAEQ,MAAO,EAA7B;AACD,CAVD,C,CAYA;;;AACAP,MAAM,CAACC,OAAP,CAAeO,UAAf,GAA6BC,KAAD,IAAW;AACrC,MAAIA,KAAK,CAACC,SAAN,CAAgB,CAAhB,EAAmBX,SAAS,CAACY,MAA7B,MAAyCZ,SAA7C,EAAwD;AACtD,UAAMJ,OAAO,CAAC,IAAIiB,KAAJ,CAAU,qCAAV,CAAD,EAAmD,wCAAnD,CAAb;AACD;;AAED,QAAMP,GAAG,GAAGI,KAAK,CAACC,SAAN,CAAgBX,SAAS,CAACY,MAA1B,CAAZ;AAEA,SAAOb,oBAAoB,CAACO,GAAD,EAAM,WAAN,CAA3B;AACD,CARD","sourcesContent":["'use strict'\n\nconst errcode = require('err-code')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst namespace = '/record/'\n\nmodule.exports.encodeBase32 = (buf) => {\n  return uint8ArrayToString(buf, 'base32')\n}\n\n// converts a binary record key to a pubsub topic key.\nmodule.exports.keyToTopic = (key) => {\n  // Record-store keys are arbitrary binary. However, pubsub requires UTF-8 string topic IDs\n  // Encodes to \"/record/base64url(key)\"\n  if (typeof key === 'string' || key instanceof String) {\n    key = uint8ArrayFromString(key)\n  }\n\n  const b64url = uint8ArrayToString(key, 'base64url')\n\n  return `${namespace}${b64url}`\n}\n\n// converts a pubsub topic key to a binary record key.\nmodule.exports.topicToKey = (topic) => {\n  if (topic.substring(0, namespace.length) !== namespace) {\n    throw errcode(new Error('topic received is not from a record'), 'ERR_TOPIC_IS_NOT_FROM_RECORD_NAMESPACE')\n  }\n\n  const key = topic.substring(namespace.length)\n\n  return uint8ArrayFromString(key, 'base64url')\n}\n"]},"metadata":{},"sourceType":"script"}