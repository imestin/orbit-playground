{"ast":null,"code":"/*!\n * aead.js - aead for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc7539#section-2.8\n *   https://github.com/openssh/openssh-portable\n */\n'use strict';\n\nconst assert = require('../internal/assert');\n\nconst ChaCha20 = require('./chacha20');\n\nconst Poly1305 = require('./poly1305');\n/*\n * Constants\n */\n\n\nconst zero16 = Buffer.alloc(16, 0x00);\n/**\n * AEAD\n */\n\nclass AEAD {\n  /**\n   * Create an AEAD context.\n   * @constructor\n   */\n  constructor() {\n    this.chacha = new ChaCha20();\n    this.poly = new Poly1305();\n    this.key = Buffer.alloc(64);\n    this.mode = -1;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n  }\n  /**\n   * Initialize the AEAD with a key and iv.\n   * @param {Buffer} key\n   * @param {Buffer} iv - IV / packet sequence number.\n   */\n\n\n  init(key, iv) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n    this.key.fill(0);\n    this.chacha.init(key, iv, 0);\n    this.chacha.encrypt(this.key);\n    this.poly.init(this.key);\n    this.mode = 0;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n    return this;\n  }\n  /**\n   * Update the aad (will be finalized\n   * on an encrypt/decrypt call).\n   * @param {Buffer} aad\n   */\n\n\n  aad(data) {\n    if (this.mode === -1) throw new Error('Context is not initialized.');\n    if (this.mode !== 0) throw new Error('Invalid state for aad.');\n    this.poly.update(data);\n    this.aadLen += data.length;\n    return this;\n  }\n  /**\n   * Encrypt a piece of data.\n   * @param {Buffer} data\n   */\n\n\n  encrypt(data) {\n    if (this.mode === -1) throw new Error('Context is not initialized.');\n    if (this.mode !== 0 && this.mode !== 1) throw new Error('Invalid state for encrypt.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n\n      this.mode = 1;\n    }\n\n    this.chacha.encrypt(data);\n    this.poly.update(data);\n    this.cipherLen += data.length;\n    return data;\n  }\n  /**\n   * Decrypt a piece of data.\n   * @param {Buffer} data\n   */\n\n\n  decrypt(data) {\n    assert(Buffer.isBuffer(data));\n    if (this.mode === -1) throw new Error('Context is not initialized.');\n    if (this.mode !== 0 && this.mode !== 2) throw new Error('Invalid state for decrypt.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n\n      this.mode = 2;\n    }\n\n    this.cipherLen += data.length;\n    this.poly.update(data);\n    this.chacha.encrypt(data);\n    return data;\n  }\n  /**\n   * Authenticate data without decrypting.\n   * @param {Buffer} data\n   */\n\n\n  auth(data) {\n    assert(Buffer.isBuffer(data));\n    if (this.mode === -1) throw new Error('Context is not initialized.');\n    if (this.mode !== 0 && this.mode !== 3) throw new Error('Invalid state for auth.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n\n      this.mode = 3;\n    }\n\n    this.cipherLen += data.length;\n    this.poly.update(data);\n    return data;\n  }\n  /**\n   * Finalize the aead and generate a MAC.\n   * @returns {Buffer} MAC\n   */\n\n\n  final() {\n    if (this.mode === -1) throw new Error('Context is not initialized.');\n    const len = Buffer.alloc(16);\n    writeU64(len, this.aadLen, 0);\n    writeU64(len, this.cipherLen, 8);\n    if (this.mode === 0) this._pad16(this.aadLen);\n\n    this._pad16(this.cipherLen);\n\n    this.poly.update(len);\n    const mac = this.poly.final();\n    this.destroy();\n    return mac;\n  }\n  /**\n   * Destroy the context.\n   */\n\n\n  destroy() {\n    this.chacha.destroy();\n    this.poly.destroy();\n\n    for (let i = 0; i < 64; i++) this.key[i] = 0;\n\n    this.mode = -1;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n    return this;\n  }\n  /**\n   * Finalize and verify MAC against tag.\n   * @param {Buffer} tag\n   * @returns {Boolean}\n   */\n\n\n  verify(tag) {\n    assert(Buffer.isBuffer(tag));\n    assert(tag.length === 16);\n    const mac = this.final();\n    let z = 0;\n\n    for (let i = 0; i < 16; i++) z |= mac[i] ^ tag[i];\n\n    return z - 1 >>> 31 !== 0;\n  }\n  /**\n   * Pad a chunk before updating mac.\n   * @private\n   * @param {Number} size\n   */\n\n\n  _pad16(size) {\n    const pos = size & 15;\n    if (pos > 0) this.poly.update(zero16.slice(0, 16 - pos));\n  }\n  /**\n   * Encrypt a piece of data.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer?} aad\n   * @returns {Buffer} tag\n   */\n\n\n  static encrypt(key, iv, msg, aad) {\n    const aead = new AEAD();\n    aead.init(key, iv);\n    if (aad) aead.aad(aad);\n    aead.encrypt(msg);\n    return aead.final();\n  }\n  /**\n   * Decrypt a piece of data.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer} tag\n   * @param {Buffer?} aad\n   * @returns {Boolean}\n   */\n\n\n  static decrypt(key, iv, msg, tag, aad) {\n    const aead = new AEAD();\n    aead.init(key, iv);\n    if (aad) aead.aad(aad);\n    aead.decrypt(msg);\n    return aead.verify(tag);\n  }\n  /**\n   * Authenticate data without decrypting.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer} tag\n   * @param {Buffer?} aad\n   * @returns {Boolean}\n   */\n\n\n  static auth(key, iv, msg, tag, aad) {\n    const aead = new AEAD();\n    aead.init(key, iv);\n    if (aad) aead.aad(aad);\n    aead.auth(msg);\n    return aead.verify(tag);\n  }\n\n}\n/*\n * Static\n */\n\n\nAEAD.native = ChaCha20.native;\n/*\n * Helpers\n */\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\nfunction writeU64(dst, num, off) {\n  const hi = num * (1 / 0x100000000) >>> 0;\n  const lo = num >>> 0;\n  writeU32(dst, lo, off + 0);\n  writeU32(dst, hi, off + 4);\n  return off + 8;\n}\n/*\n * Expose\n */\n\n\nmodule.exports = AEAD;","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/bcrypto/lib/js/aead.js"],"names":["assert","require","ChaCha20","Poly1305","zero16","Buffer","alloc","AEAD","constructor","chacha","poly","key","mode","aadLen","cipherLen","init","iv","isBuffer","fill","encrypt","aad","data","Error","update","length","_pad16","decrypt","auth","final","len","writeU64","mac","destroy","i","verify","tag","z","size","pos","slice","msg","aead","native","writeU32","dst","num","off","hi","lo","module","exports"],"mappings":"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","sourcesContent":["/*!\n * aead.js - aead for bcrypto\n * Copyright (c) 2016-2019, Christopher Jeffrey (MIT License).\n * https://github.com/bcoin-org/bcrypto\n *\n * Resources:\n *   https://tools.ietf.org/html/rfc7539#section-2.8\n *   https://github.com/openssh/openssh-portable\n */\n\n'use strict';\n\nconst assert = require('../internal/assert');\nconst ChaCha20 = require('./chacha20');\nconst Poly1305 = require('./poly1305');\n\n/*\n * Constants\n */\n\nconst zero16 = Buffer.alloc(16, 0x00);\n\n/**\n * AEAD\n */\n\nclass AEAD {\n  /**\n   * Create an AEAD context.\n   * @constructor\n   */\n\n  constructor() {\n    this.chacha = new ChaCha20();\n    this.poly = new Poly1305();\n    this.key = Buffer.alloc(64);\n    this.mode = -1;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n  }\n\n  /**\n   * Initialize the AEAD with a key and iv.\n   * @param {Buffer} key\n   * @param {Buffer} iv - IV / packet sequence number.\n   */\n\n  init(key, iv) {\n    assert(Buffer.isBuffer(key));\n    assert(Buffer.isBuffer(iv));\n\n    this.key.fill(0);\n    this.chacha.init(key, iv, 0);\n    this.chacha.encrypt(this.key);\n    this.poly.init(this.key);\n\n    this.mode = 0;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n\n    return this;\n  }\n\n  /**\n   * Update the aad (will be finalized\n   * on an encrypt/decrypt call).\n   * @param {Buffer} aad\n   */\n\n  aad(data) {\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0)\n      throw new Error('Invalid state for aad.');\n\n    this.poly.update(data);\n    this.aadLen += data.length;\n\n    return this;\n  }\n\n  /**\n   * Encrypt a piece of data.\n   * @param {Buffer} data\n   */\n\n  encrypt(data) {\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0 && this.mode !== 1)\n      throw new Error('Invalid state for encrypt.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n      this.mode = 1;\n    }\n\n    this.chacha.encrypt(data);\n    this.poly.update(data);\n\n    this.cipherLen += data.length;\n\n    return data;\n  }\n\n  /**\n   * Decrypt a piece of data.\n   * @param {Buffer} data\n   */\n\n  decrypt(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0 && this.mode !== 2)\n      throw new Error('Invalid state for decrypt.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n      this.mode = 2;\n    }\n\n    this.cipherLen += data.length;\n\n    this.poly.update(data);\n    this.chacha.encrypt(data);\n\n    return data;\n  }\n\n  /**\n   * Authenticate data without decrypting.\n   * @param {Buffer} data\n   */\n\n  auth(data) {\n    assert(Buffer.isBuffer(data));\n\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    if (this.mode !== 0 && this.mode !== 3)\n      throw new Error('Invalid state for auth.');\n\n    if (this.mode === 0) {\n      this._pad16(this.aadLen);\n      this.mode = 3;\n    }\n\n    this.cipherLen += data.length;\n\n    this.poly.update(data);\n\n    return data;\n  }\n\n  /**\n   * Finalize the aead and generate a MAC.\n   * @returns {Buffer} MAC\n   */\n\n  final() {\n    if (this.mode === -1)\n      throw new Error('Context is not initialized.');\n\n    const len = Buffer.alloc(16);\n\n    writeU64(len, this.aadLen, 0);\n    writeU64(len, this.cipherLen, 8);\n\n    if (this.mode === 0)\n      this._pad16(this.aadLen);\n\n    this._pad16(this.cipherLen);\n    this.poly.update(len);\n\n    const mac = this.poly.final();\n\n    this.destroy();\n\n    return mac;\n  }\n\n  /**\n   * Destroy the context.\n   */\n\n  destroy() {\n    this.chacha.destroy();\n    this.poly.destroy();\n\n    for (let i = 0; i < 64; i++)\n      this.key[i] = 0;\n\n    this.mode = -1;\n    this.aadLen = 0;\n    this.cipherLen = 0;\n\n    return this;\n  }\n\n  /**\n   * Finalize and verify MAC against tag.\n   * @param {Buffer} tag\n   * @returns {Boolean}\n   */\n\n  verify(tag) {\n    assert(Buffer.isBuffer(tag));\n    assert(tag.length === 16);\n\n    const mac = this.final();\n\n    let z = 0;\n\n    for (let i = 0; i < 16; i++)\n      z |= mac[i] ^ tag[i];\n\n    return ((z - 1) >>> 31) !== 0;\n  }\n\n  /**\n   * Pad a chunk before updating mac.\n   * @private\n   * @param {Number} size\n   */\n\n  _pad16(size) {\n    const pos = size & 15;\n\n    if (pos > 0)\n      this.poly.update(zero16.slice(0, 16 - pos));\n  }\n\n  /**\n   * Encrypt a piece of data.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer?} aad\n   * @returns {Buffer} tag\n   */\n\n  static encrypt(key, iv, msg, aad) {\n    const aead = new AEAD();\n\n    aead.init(key, iv);\n\n    if (aad)\n      aead.aad(aad);\n\n    aead.encrypt(msg);\n\n    return aead.final();\n  }\n\n  /**\n   * Decrypt a piece of data.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer} tag\n   * @param {Buffer?} aad\n   * @returns {Boolean}\n   */\n\n  static decrypt(key, iv, msg, tag, aad) {\n    const aead = new AEAD();\n\n    aead.init(key, iv);\n\n    if (aad)\n      aead.aad(aad);\n\n    aead.decrypt(msg);\n\n    return aead.verify(tag);\n  }\n\n  /**\n   * Authenticate data without decrypting.\n   * @param {Buffer} key\n   * @param {Buffer} iv\n   * @param {Buffer} msg\n   * @param {Buffer} tag\n   * @param {Buffer?} aad\n   * @returns {Boolean}\n   */\n\n  static auth(key, iv, msg, tag, aad) {\n    const aead = new AEAD();\n\n    aead.init(key, iv);\n\n    if (aad)\n      aead.aad(aad);\n\n    aead.auth(msg);\n\n    return aead.verify(tag);\n  }\n}\n\n/*\n * Static\n */\n\nAEAD.native = ChaCha20.native;\n\n/*\n * Helpers\n */\n\nfunction writeU32(dst, num, off) {\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  num >>>= 8;\n  dst[off++] = num;\n  return off;\n}\n\nfunction writeU64(dst, num, off) {\n  const hi = (num * (1 / 0x100000000)) >>> 0;\n  const lo = num >>> 0;\n\n  writeU32(dst, lo, off + 0);\n  writeU32(dst, hi, off + 4);\n\n  return off + 8;\n}\n\n/*\n * Expose\n */\n\nmodule.exports = AEAD;\n"]},"metadata":{},"sourceType":"script"}