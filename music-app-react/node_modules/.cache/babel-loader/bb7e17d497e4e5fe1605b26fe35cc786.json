{"ast":null,"code":"'use strict';\n\nconst debug = require('debug');\n\nconst log = debug('ipfs:repo:migrator:repo_mem_lock');\nconst lockFile = 'repo.lock';\nconst LOCKS = {};\n/**\n * Lock the repo in the given dir and for given repo version.\n * @param {int} version\n * @param {string} dir\n * @returns {Promise<Object>}\n */\n\nexports.lock = async function lock(version, dir) {\n  // eslint-disable-line require-await\n  const file = dir + '/' + lockFile;\n  log('locking %s', file);\n\n  if (LOCKS[file] === true) {\n    throw Error(`There is already present lock for: ${file}`);\n  }\n\n  LOCKS[file] = true;\n  return {\n    close() {\n      if (LOCKS[file]) {\n        log('releasing lock %s', file);\n        delete LOCKS[file];\n      }\n    }\n\n  };\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/ipfs-repo-migrations/src/repo/lock-memory.js"],"names":["debug","require","log","lockFile","LOCKS","exports","lock","version","dir","file","Error","close"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AACA,MAAMC,GAAG,GAAGF,KAAK,CAAC,kCAAD,CAAjB;AACA,MAAMG,QAAQ,GAAG,WAAjB;AACA,MAAMC,KAAK,GAAG,EAAd;AAEA;;;;;;;AAMAC,OAAO,CAACC,IAAR,GAAe,eAAeA,IAAf,CAAqBC,OAArB,EAA8BC,GAA9B,EAAmC;AAAE;AAClD,QAAMC,IAAI,GAAGD,GAAG,GAAG,GAAN,GAAYL,QAAzB;AACAD,EAAAA,GAAG,CAAC,YAAD,EAAeO,IAAf,CAAH;;AAEA,MAAIL,KAAK,CAACK,IAAD,CAAL,KAAgB,IAApB,EAA0B;AACxB,UAAMC,KAAK,CAAE,sCAAqCD,IAAK,EAA5C,CAAX;AACD;;AAEDL,EAAAA,KAAK,CAACK,IAAD,CAAL,GAAc,IAAd;AACA,SAAO;AACLE,IAAAA,KAAK,GAAI;AACP,UAAIP,KAAK,CAACK,IAAD,CAAT,EAAiB;AACfP,QAAAA,GAAG,CAAC,mBAAD,EAAsBO,IAAtB,CAAH;AACA,eAAOL,KAAK,CAACK,IAAD,CAAZ;AACD;AACF;;AANI,GAAP;AAQD,CAjBD","sourcesContent":["'use strict'\n\nconst debug = require('debug')\nconst log = debug('ipfs:repo:migrator:repo_mem_lock')\nconst lockFile = 'repo.lock'\nconst LOCKS = {}\n\n/**\n * Lock the repo in the given dir and for given repo version.\n * @param {int} version\n * @param {string} dir\n * @returns {Promise<Object>}\n */\nexports.lock = async function lock (version, dir) { // eslint-disable-line require-await\n  const file = dir + '/' + lockFile\n  log('locking %s', file)\n\n  if (LOCKS[file] === true) {\n    throw Error(`There is already present lock for: ${file}`)\n  }\n\n  LOCKS[file] = true\n  return {\n    close () {\n      if (LOCKS[file]) {\n        log('releasing lock %s', file)\n        delete LOCKS[file]\n      }\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}