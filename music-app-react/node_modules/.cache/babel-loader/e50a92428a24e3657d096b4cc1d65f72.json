{"ast":null,"code":"'use strict';\n\nconst multibase = require('multibase');\n\nconst {\n  Key\n} = require('interface-datastore');\n\nconst multihashes = require('multihashing-async').multihash;\n\nconst PIN_DS_KEY = new Key('/local/pins');\nconst DEFAULT_FANOUT = 256;\nconst MAX_ITEMS = 8192;\nconst EMPTY_KEY = multihashes.fromB58String('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n');\nconst PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive'\n};\n\nfunction cidToKey(cid) {\n  return new Key(`/${multibase.encoding('base32upper').encode(cid.multihash)}`);\n}\n\nmodule.exports = {\n  PIN_DS_KEY,\n  DEFAULT_FANOUT,\n  MAX_ITEMS,\n  EMPTY_KEY,\n  PinTypes,\n  cidToKey\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/ipfs-repo-migrations/migrations/migration-9/utils.js"],"names":["multibase","require","Key","multihashes","multihash","PIN_DS_KEY","DEFAULT_FANOUT","MAX_ITEMS","EMPTY_KEY","fromB58String","PinTypes","direct","recursive","cidToKey","cid","encoding","encode","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,SAAS,GAAGC,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAUD,OAAO,CAAC,qBAAD,CAAvB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,oBAAD,CAAP,CAA8BG,SAAlD;;AAEA,MAAMC,UAAU,GAAG,IAAIH,GAAJ,CAAQ,aAAR,CAAnB;AACA,MAAMI,cAAc,GAAG,GAAvB;AACA,MAAMC,SAAS,GAAG,IAAlB;AACA,MAAMC,SAAS,GAAGL,WAAW,CAACM,aAAZ,CAA0B,gDAA1B,CAAlB;AAEA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,MAAM,EAAE,QADO;AAEfC,EAAAA,SAAS,EAAE;AAFI,CAAjB;;AAKA,SAASC,QAAT,CAAmBC,GAAnB,EAAwB;AACtB,SAAO,IAAIZ,GAAJ,CAAS,IAAGF,SAAS,CAACe,QAAV,CAAmB,aAAnB,EAAkCC,MAAlC,CAAyCF,GAAG,CAACV,SAA7C,CAAwD,EAApE,CAAP;AACD;;AAEDa,MAAM,CAACC,OAAP,GAAiB;AACfb,EAAAA,UADe;AAEfC,EAAAA,cAFe;AAGfC,EAAAA,SAHe;AAIfC,EAAAA,SAJe;AAKfE,EAAAA,QALe;AAMfG,EAAAA;AANe,CAAjB","sourcesContent":["'use strict'\n\nconst multibase = require('multibase')\nconst { Key } = require('interface-datastore')\nconst multihashes = require('multihashing-async').multihash\n\nconst PIN_DS_KEY = new Key('/local/pins')\nconst DEFAULT_FANOUT = 256\nconst MAX_ITEMS = 8192\nconst EMPTY_KEY = multihashes.fromB58String('QmdfTbBqBPQ7VNxZEYEj14VmRuZBkqFbiwReogJgS1zR1n')\n\nconst PinTypes = {\n  direct: 'direct',\n  recursive: 'recursive'\n}\n\nfunction cidToKey (cid) {\n  return new Key(`/${multibase.encoding('base32upper').encode(cid.multihash)}`)\n}\n\nmodule.exports = {\n  PIN_DS_KEY,\n  DEFAULT_FANOUT,\n  MAX_ITEMS,\n  EMPTY_KEY,\n  PinTypes,\n  cidToKey\n}\n"]},"metadata":{},"sourceType":"script"}