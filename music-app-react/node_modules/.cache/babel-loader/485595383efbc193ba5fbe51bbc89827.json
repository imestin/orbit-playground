{"ast":null,"code":"'use strict';\n\nconst Store = require('orbit-db-store');\n\nconst CounterIndex = require('./CounterIndex');\n\nconst Counter = require('crdts/src/G-Counter');\n\nclass CounterStore extends Store {\n  constructor(ipfs, id, dbname, options = {}) {\n    if (!options.Index) {\n      Object.assign(options, {\n        Index: CounterIndex\n      });\n    }\n\n    super(ipfs, id, dbname, options);\n    this._type = 'counter';\n  }\n\n  get value() {\n    return this._index.get().value;\n  }\n\n  inc(amount, options = {}) {\n    const counter = new Counter(this.identity.publicKey, Object.assign({}, this._index.get()._counters));\n    counter.increment(amount);\n    return this._addOperation({\n      op: 'COUNTER',\n      key: null,\n      value: counter.toJSON()\n    }, options);\n  }\n\n}\n\nmodule.exports = CounterStore;","map":{"version":3,"sources":["/home/user/orbit-playground/music-app-react/node_modules/orbit-db-counterstore/src/CounterStore.js"],"names":["Store","require","CounterIndex","Counter","CounterStore","constructor","ipfs","id","dbname","options","Index","Object","assign","_type","value","_index","get","inc","amount","counter","identity","publicKey","_counters","increment","_addOperation","op","key","toJSON","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,KAAK,GAAGC,OAAO,CAAC,gBAAD,CAArB;;AACA,MAAMC,YAAY,GAAGD,OAAO,CAAC,gBAAD,CAA5B;;AACA,MAAME,OAAO,GAAGF,OAAO,CAAC,qBAAD,CAAvB;;AAEA,MAAMG,YAAN,SAA2BJ,KAA3B,CAAiC;AAC/BK,EAAAA,WAAW,CAAEC,IAAF,EAAQC,EAAR,EAAYC,MAAZ,EAAoBC,OAAO,GAAG,EAA9B,EAAkC;AAC3C,QAAI,CAACA,OAAO,CAACC,KAAb,EAAoB;AAClBC,MAAAA,MAAM,CAACC,MAAP,CAAcH,OAAd,EAAuB;AAAEC,QAAAA,KAAK,EAAER;AAAT,OAAvB;AACD;;AACD,UAAMI,IAAN,EAAYC,EAAZ,EAAgBC,MAAhB,EAAwBC,OAAxB;AACA,SAAKI,KAAL,GAAa,SAAb;AACD;;AAED,MAAIC,KAAJ,GAAa;AACX,WAAO,KAAKC,MAAL,CAAYC,GAAZ,GAAkBF,KAAzB;AACD;;AAEDG,EAAAA,GAAG,CAAEC,MAAF,EAAUT,OAAO,GAAG,EAApB,EAAwB;AACzB,UAAMU,OAAO,GAAG,IAAIhB,OAAJ,CAAY,KAAKiB,QAAL,CAAcC,SAA1B,EAAqCV,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,KAAKG,MAAL,CAAYC,GAAZ,GAAkBM,SAApC,CAArC,CAAhB;AACAH,IAAAA,OAAO,CAACI,SAAR,CAAkBL,MAAlB;AACA,WAAO,KAAKM,aAAL,CAAmB;AACxBC,MAAAA,EAAE,EAAE,SADoB;AAExBC,MAAAA,GAAG,EAAE,IAFmB;AAGxBZ,MAAAA,KAAK,EAAEK,OAAO,CAACQ,MAAR;AAHiB,KAAnB,EAIJlB,OAJI,CAAP;AAKD;;AArB8B;;AAwBjCmB,MAAM,CAACC,OAAP,GAAiBzB,YAAjB","sourcesContent":["'use strict'\n\nconst Store = require('orbit-db-store')\nconst CounterIndex = require('./CounterIndex')\nconst Counter = require('crdts/src/G-Counter')\n\nclass CounterStore extends Store {\n  constructor (ipfs, id, dbname, options = {}) {\n    if (!options.Index) {\n      Object.assign(options, { Index: CounterIndex })\n    }\n    super(ipfs, id, dbname, options)\n    this._type = 'counter'\n  }\n\n  get value () {\n    return this._index.get().value\n  }\n\n  inc (amount, options = {}) {\n    const counter = new Counter(this.identity.publicKey, Object.assign({}, this._index.get()._counters))\n    counter.increment(amount)\n    return this._addOperation({\n      op: 'COUNTER',\n      key: null,\n      value: counter.toJSON()\n    }, options)\n  }\n}\n\nmodule.exports = CounterStore\n"]},"metadata":{},"sourceType":"script"}