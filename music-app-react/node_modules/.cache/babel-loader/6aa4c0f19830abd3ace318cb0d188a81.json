{"ast":null,"code":"'use strict';\n\nconst CID = require('cids');\n\nconst errCode = require('err-code');\n\nconst {\n  withTimeoutOption\n} = require('../../utils');\n/**\n * @typedef {import('cids')} CID\n */\n\n/**\n * Removes one or more CIDs from the wantlist\n * @template {Record<string, any>} ExtraOptions\n * @callback Unwant\n * @param {CID | CID[]} cids - The CIDs to remove from the wantlist\n * @param {import('../../utils').AbortOptions & ExtraOptions} [options]\n * @returns {Promise<void>} - A promise that resolves once the request is complete\n */\n\n\nmodule.exports = ({\n  bitswap\n}) => {\n  // eslint-disable-next-line valid-jsdoc\n\n  /**\n   * @type {Unwant<{}>}\n   */\n  async function unwant(cids, options) {\n    // eslint-disable-line require-await\n    if (!Array.isArray(cids)) {\n      cids = [cids];\n    }\n\n    try {\n      cids = cids.map(cid => new CID(cid));\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_CID');\n    }\n\n    return bitswap.unwant(cids, options);\n  }\n\n  return withTimeoutOption(unwant);\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/ipfs/src/core/components/bitswap/unwant.js"],"names":["CID","require","errCode","withTimeoutOption","module","exports","bitswap","unwant","cids","options","Array","isArray","map","cid","err"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,MAAD,CAAnB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAwBF,OAAO,CAAC,aAAD,CAArC;AAEA;;;;AAIA;;;;;;;;;;AASAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAChC;;AACA;;;AAGA,iBAAeC,MAAf,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsC;AAAE;AACtC,QAAI,CAACC,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAL,EAA0B;AACxBA,MAAAA,IAAI,GAAG,CAACA,IAAD,CAAP;AACD;;AAED,QAAI;AACFA,MAAAA,IAAI,GAAGA,IAAI,CAACI,GAAL,CAAUC,GAAD,IAAS,IAAIb,GAAJ,CAAQa,GAAR,CAAlB,CAAP;AACD,KAFD,CAEE,OAAOC,GAAP,EAAY;AACZ,YAAMZ,OAAO,CAACY,GAAD,EAAM,iBAAN,CAAb;AACD;;AAED,WAAOR,OAAO,CAACC,MAAR,CAAeC,IAAf,EAAqBC,OAArB,CAAP;AACD;;AAED,SAAON,iBAAiB,CAACI,MAAD,CAAxB;AACD,CApBD","sourcesContent":["'use strict'\n\nconst CID = require('cids')\nconst errCode = require('err-code')\nconst { withTimeoutOption } = require('../../utils')\n\n/**\n * @typedef {import('cids')} CID\n */\n\n/**\n * Removes one or more CIDs from the wantlist\n * @template {Record<string, any>} ExtraOptions\n * @callback Unwant\n * @param {CID | CID[]} cids - The CIDs to remove from the wantlist\n * @param {import('../../utils').AbortOptions & ExtraOptions} [options]\n * @returns {Promise<void>} - A promise that resolves once the request is complete\n */\n\nmodule.exports = ({ bitswap }) => {\n  // eslint-disable-next-line valid-jsdoc\n  /**\n   * @type {Unwant<{}>}\n   */\n  async function unwant (cids, options) { // eslint-disable-line require-await\n    if (!Array.isArray(cids)) {\n      cids = [cids]\n    }\n\n    try {\n      cids = cids.map((cid) => new CID(cid))\n    } catch (err) {\n      throw errCode(err, 'ERR_INVALID_CID')\n    }\n\n    return bitswap.unwant(cids, options)\n  }\n\n  return withTimeoutOption(unwant)\n}\n"]},"metadata":{},"sourceType":"script"}