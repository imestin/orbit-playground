{"ast":null,"code":"var EventEmitter = require('events').EventEmitter;\n\nvar inherits = require('util').inherits;\n\nvar extend = require('xtend');\n\nvar DeferredLevelDOWN = require('deferred-leveldown');\n\nvar IteratorStream = require('level-iterator-stream');\n\nvar Batch = require('./batch');\n\nvar errors = require('level-errors');\n\nvar assert = require('assert');\n\nvar promisify = require('./promisify');\n\nvar getCallback = require('./common').getCallback;\n\nvar getOptions = require('./common').getOptions;\n\nvar WriteError = errors.WriteError;\nvar ReadError = errors.ReadError;\nvar NotFoundError = errors.NotFoundError;\nvar OpenError = errors.OpenError;\nvar InitializationError = errors.InitializationError; // Possible AbstractLevelDOWN#status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP(db, options, callback) {\n  if (!(this instanceof LevelUP)) {\n    return new LevelUP(db, options, callback);\n  }\n\n  var error;\n  EventEmitter.call(this);\n  this.setMaxListeners(Infinity);\n\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n\n  options = options || {};\n\n  if (!db || typeof db !== 'object') {\n    error = new InitializationError('First argument must be an abstract-leveldown compliant store');\n\n    if (typeof callback === 'function') {\n      return process.nextTick(callback, error);\n    }\n\n    throw error;\n  }\n\n  assert.strictEqual(typeof db.status, 'string', '.status required, old abstract-leveldown');\n  this.options = getOptions(options);\n  this._db = db;\n  this.db = new DeferredLevelDOWN(db);\n  this.open(callback);\n}\n\nLevelUP.prototype.emit = EventEmitter.prototype.emit;\nLevelUP.prototype.once = EventEmitter.prototype.once;\ninherits(LevelUP, EventEmitter);\n\nLevelUP.prototype.open = function (opts, callback) {\n  var self = this;\n  var promise;\n\n  if (typeof opts === 'function') {\n    callback = opts;\n    opts = null;\n  }\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (!opts) {\n    opts = this.options;\n  }\n\n  if (this.isOpen()) {\n    process.nextTick(callback, null, self);\n    return promise;\n  }\n\n  if (this._isOpening()) {\n    this.once('open', function () {\n      callback(null, self);\n    });\n    return promise;\n  }\n\n  this.emit('opening');\n  this.db.open(opts, function (err) {\n    if (err) {\n      return callback(new OpenError(err));\n    }\n\n    self.db = self._db;\n    callback(null, self);\n    self.emit('open');\n    self.emit('ready');\n  });\n  return promise;\n};\n\nLevelUP.prototype.close = function (callback) {\n  var self = this;\n  var promise;\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (this.isOpen()) {\n    this.db.close(function () {\n      self.emit('closed');\n      callback.apply(null, arguments);\n    });\n    this.emit('closing');\n    this.db = new DeferredLevelDOWN(this._db);\n  } else if (this.isClosed()) {\n    process.nextTick(callback);\n  } else if (this.db.status === 'closing') {\n    this.once('closed', callback);\n  } else if (this._isOpening()) {\n    this.once('open', function () {\n      self.close(callback);\n    });\n  }\n\n  return promise;\n};\n\nLevelUP.prototype.isOpen = function () {\n  return this.db.status === 'open';\n};\n\nLevelUP.prototype._isOpening = function () {\n  return this.db.status === 'opening';\n};\n\nLevelUP.prototype.isClosed = function () {\n  return /^clos|new/.test(this.db.status);\n};\n\nLevelUP.prototype.get = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new ReadError('get() requires a key argument');\n  }\n\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if (/notfound/i.test(err) || err.notFound) {\n        err = new NotFoundError('Key not found in database [' + key + ']', err);\n      } else {\n        err = new ReadError(err);\n      }\n\n      return callback(err);\n    }\n\n    callback(null, value);\n  });\n  return promise;\n};\n\nLevelUP.prototype.put = function (key, value, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('put() requires a key argument');\n  }\n\n  var self = this;\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.put(key, value, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    self.emit('put', key, value);\n    callback();\n  });\n  return promise;\n};\n\nLevelUP.prototype.del = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('del() requires a key argument');\n  }\n\n  var self = this;\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.del(key, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    self.emit('del', key);\n    callback();\n  });\n  return promise;\n};\n\nLevelUP.prototype.batch = function (arr, options, callback) {\n  if (!arguments.length) {\n    return new Batch(this);\n  }\n\n  if (!Array.isArray(arr)) {\n    throw new WriteError('batch() requires an array argument');\n  }\n\n  var self = this;\n  var promise;\n  callback = getCallback(options, callback);\n\n  if (!callback) {\n    callback = promisify();\n    promise = callback.promise;\n  }\n\n  if (maybeError(this, callback)) {\n    return promise;\n  }\n\n  options = getOptions(options);\n  this.db.batch(arr, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err));\n    }\n\n    self.emit('batch', arr);\n    callback();\n  });\n  return promise;\n};\n\nLevelUP.prototype.iterator = function (options) {\n  return this.db.iterator(options);\n};\n\nLevelUP.prototype.readStream = LevelUP.prototype.createReadStream = function (options) {\n  options = extend({\n    keys: true,\n    values: true\n  }, options);\n\n  if (typeof options.limit !== 'number') {\n    options.limit = -1;\n  }\n\n  return new IteratorStream(this.db.iterator(options), options);\n};\n\nLevelUP.prototype.keyStream = LevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(extend(options, {\n    keys: true,\n    values: false\n  }));\n};\n\nLevelUP.prototype.valueStream = LevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(extend(options, {\n    keys: false,\n    values: true\n  }));\n};\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP';\n};\n\nfunction maybeError(db, callback) {\n  if (!db._isOpening() && !db.isOpen()) {\n    process.nextTick(callback, new ReadError('Database is not open'));\n    return true;\n  }\n}\n\nLevelUP.errors = errors;\nmodule.exports = LevelUP.default = LevelUP;","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/levelup/lib/levelup.js"],"names":["EventEmitter","require","inherits","extend","DeferredLevelDOWN","IteratorStream","Batch","errors","assert","promisify","getCallback","getOptions","WriteError","ReadError","NotFoundError","OpenError","InitializationError","LevelUP","db","options","callback","error","call","setMaxListeners","Infinity","process","nextTick","strictEqual","status","_db","open","prototype","emit","once","opts","self","promise","isOpen","_isOpening","err","close","apply","arguments","isClosed","test","get","key","undefined","maybeError","value","notFound","put","del","batch","arr","length","Array","isArray","iterator","readStream","createReadStream","keys","values","limit","keyStream","createKeyStream","valueStream","createValueStream","toString","module","exports","default"],"mappings":"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","sourcesContent":["var EventEmitter = require('events').EventEmitter\nvar inherits = require('util').inherits\nvar extend = require('xtend')\nvar DeferredLevelDOWN = require('deferred-leveldown')\nvar IteratorStream = require('level-iterator-stream')\nvar Batch = require('./batch')\nvar errors = require('level-errors')\nvar assert = require('assert')\nvar promisify = require('./promisify')\nvar getCallback = require('./common').getCallback\nvar getOptions = require('./common').getOptions\n\nvar WriteError = errors.WriteError\nvar ReadError = errors.ReadError\nvar NotFoundError = errors.NotFoundError\nvar OpenError = errors.OpenError\nvar InitializationError = errors.InitializationError\n\n// Possible AbstractLevelDOWN#status values:\n//  - 'new'     - newly created, not opened or closed\n//  - 'opening' - waiting for the database to be opened, post open()\n//  - 'open'    - successfully opened the database, available for use\n//  - 'closing' - waiting for the database to be closed, post close()\n//  - 'closed'  - database has been successfully closed, should not be\n//                 used except for another open() operation\n\nfunction LevelUP (db, options, callback) {\n  if (!(this instanceof LevelUP)) {\n    return new LevelUP(db, options, callback)\n  }\n\n  var error\n\n  EventEmitter.call(this)\n  this.setMaxListeners(Infinity)\n\n  if (typeof options === 'function') {\n    callback = options\n    options = {}\n  }\n\n  options = options || {}\n\n  if (!db || typeof db !== 'object') {\n    error = new InitializationError('First argument must be an abstract-leveldown compliant store')\n    if (typeof callback === 'function') {\n      return process.nextTick(callback, error)\n    }\n    throw error\n  }\n\n  assert.strictEqual(typeof db.status, 'string', '.status required, old abstract-leveldown')\n\n  this.options = getOptions(options)\n  this._db = db\n  this.db = new DeferredLevelDOWN(db)\n  this.open(callback)\n}\n\nLevelUP.prototype.emit = EventEmitter.prototype.emit\nLevelUP.prototype.once = EventEmitter.prototype.once\ninherits(LevelUP, EventEmitter)\n\nLevelUP.prototype.open = function (opts, callback) {\n  var self = this\n  var promise\n\n  if (typeof opts === 'function') {\n    callback = opts\n    opts = null\n  }\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (!opts) {\n    opts = this.options\n  }\n\n  if (this.isOpen()) {\n    process.nextTick(callback, null, self)\n    return promise\n  }\n\n  if (this._isOpening()) {\n    this.once('open', function () { callback(null, self) })\n    return promise\n  }\n\n  this.emit('opening')\n\n  this.db.open(opts, function (err) {\n    if (err) {\n      return callback(new OpenError(err))\n    }\n    self.db = self._db\n    callback(null, self)\n    self.emit('open')\n    self.emit('ready')\n  })\n\n  return promise\n}\n\nLevelUP.prototype.close = function (callback) {\n  var self = this\n  var promise\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (this.isOpen()) {\n    this.db.close(function () {\n      self.emit('closed')\n      callback.apply(null, arguments)\n    })\n    this.emit('closing')\n    this.db = new DeferredLevelDOWN(this._db)\n  } else if (this.isClosed()) {\n    process.nextTick(callback)\n  } else if (this.db.status === 'closing') {\n    this.once('closed', callback)\n  } else if (this._isOpening()) {\n    this.once('open', function () {\n      self.close(callback)\n    })\n  }\n\n  return promise\n}\n\nLevelUP.prototype.isOpen = function () {\n  return this.db.status === 'open'\n}\n\nLevelUP.prototype._isOpening = function () {\n  return this.db.status === 'opening'\n}\n\nLevelUP.prototype.isClosed = function () {\n  return (/^clos|new/).test(this.db.status)\n}\n\nLevelUP.prototype.get = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new ReadError('get() requires a key argument')\n  }\n\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.get(key, options, function (err, value) {\n    if (err) {\n      if ((/notfound/i).test(err) || err.notFound) {\n        err = new NotFoundError('Key not found in database [' + key + ']', err)\n      } else {\n        err = new ReadError(err)\n      }\n      return callback(err)\n    }\n    callback(null, value)\n  })\n\n  return promise\n}\n\nLevelUP.prototype.put = function (key, value, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('put() requires a key argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.put(key, value, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('put', key, value)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.del = function (key, options, callback) {\n  if (key === null || key === undefined) {\n    throw new WriteError('del() requires a key argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.del(key, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('del', key)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.batch = function (arr, options, callback) {\n  if (!arguments.length) {\n    return new Batch(this)\n  }\n\n  if (!Array.isArray(arr)) {\n    throw new WriteError('batch() requires an array argument')\n  }\n\n  var self = this\n  var promise\n\n  callback = getCallback(options, callback)\n\n  if (!callback) {\n    callback = promisify()\n    promise = callback.promise\n  }\n\n  if (maybeError(this, callback)) { return promise }\n\n  options = getOptions(options)\n\n  this.db.batch(arr, options, function (err) {\n    if (err) {\n      return callback(new WriteError(err))\n    }\n    self.emit('batch', arr)\n    callback()\n  })\n\n  return promise\n}\n\nLevelUP.prototype.iterator = function (options) {\n  return this.db.iterator(options)\n}\n\nLevelUP.prototype.readStream =\nLevelUP.prototype.createReadStream = function (options) {\n  options = extend({ keys: true, values: true }, options)\n  if (typeof options.limit !== 'number') { options.limit = -1 }\n  return new IteratorStream(this.db.iterator(options), options)\n}\n\nLevelUP.prototype.keyStream =\nLevelUP.prototype.createKeyStream = function (options) {\n  return this.createReadStream(extend(options, { keys: true, values: false }))\n}\n\nLevelUP.prototype.valueStream =\nLevelUP.prototype.createValueStream = function (options) {\n  return this.createReadStream(extend(options, { keys: false, values: true }))\n}\n\nLevelUP.prototype.toString = function () {\n  return 'LevelUP'\n}\n\nfunction maybeError (db, callback) {\n  if (!db._isOpening() && !db.isOpen()) {\n    process.nextTick(callback, new ReadError('Database is not open'))\n    return true\n  }\n}\n\nLevelUP.errors = errors\nmodule.exports = LevelUP.default = LevelUP\n"]},"metadata":{},"sourceType":"script"}