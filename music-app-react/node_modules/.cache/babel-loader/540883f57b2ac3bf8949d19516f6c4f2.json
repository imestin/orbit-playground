{"ast":null,"code":"'use strict';\n\nconst errcode = require('err-code');\n/**\n * Record is the base implementation of a record that can be used as the payload of a libp2p envelope.\n */\n\n\nclass Record {\n  /**\n   * @constructor\n   * @param {String} domain signature domain\n   * @param {Uint8Array} codec identifier of the type of record\n   */\n  constructor(domain, codec) {\n    this.domain = domain;\n    this.codec = codec;\n  }\n  /**\n   * Marshal a record to be used in an envelope.\n   */\n\n\n  marshal() {\n    throw errcode(new Error('marshal must be implemented by the subclass'), 'ERR_NOT_IMPLEMENTED');\n  }\n  /**\n   * Verifies if the other provided Record is identical to this one.\n   * @param {Record} other\n   */\n\n\n  equals(other) {\n    throw errcode(new Error('equals must be implemented by the subclass'), 'ERR_NOT_IMPLEMENTED');\n  }\n\n}\n\nmodule.exports = Record;","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/libp2p/node_modules/libp2p-interfaces/src/record/index.js"],"names":["errcode","require","Record","constructor","domain","codec","marshal","Error","equals","other","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,UAAD,CAAvB;AAEA;;;;;AAGA,MAAMC,MAAN,CAAa;AACX;;;;;AAKAC,EAAAA,WAAW,CAAEC,MAAF,EAAUC,KAAV,EAAiB;AAC1B,SAAKD,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb;AACD;AAED;;;;;AAGAC,EAAAA,OAAO,GAAI;AACT,UAAMN,OAAO,CAAC,IAAIO,KAAJ,CAAU,6CAAV,CAAD,EAA2D,qBAA3D,CAAb;AACD;AAED;;;;;;AAIAC,EAAAA,MAAM,CAAEC,KAAF,EAAS;AACb,UAAMT,OAAO,CAAC,IAAIO,KAAJ,CAAU,4CAAV,CAAD,EAA0D,qBAA1D,CAAb;AACD;;AAxBU;;AA2BbG,MAAM,CAACC,OAAP,GAAiBT,MAAjB","sourcesContent":["'use strict'\n\nconst errcode = require('err-code')\n\n/**\n * Record is the base implementation of a record that can be used as the payload of a libp2p envelope.\n */\nclass Record {\n  /**\n   * @constructor\n   * @param {String} domain signature domain\n   * @param {Uint8Array} codec identifier of the type of record\n   */\n  constructor (domain, codec) {\n    this.domain = domain\n    this.codec = codec\n  }\n\n  /**\n   * Marshal a record to be used in an envelope.\n   */\n  marshal () {\n    throw errcode(new Error('marshal must be implemented by the subclass'), 'ERR_NOT_IMPLEMENTED')\n  }\n\n  /**\n   * Verifies if the other provided Record is identical to this one.\n   * @param {Record} other\n   */\n  equals (other) {\n    throw errcode(new Error('equals must be implemented by the subclass'), 'ERR_NOT_IMPLEMENTED')\n  }\n}\n\nmodule.exports = Record\n"]},"metadata":{},"sourceType":"script"}