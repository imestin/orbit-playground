{"ast":null,"code":"'use strict';\n\nconst protons = require('protons');\n\nconst message = `\nmessage Envelope {\n  // public_key is the public key of the keypair the enclosed payload was\n  // signed with.\n  bytes public_key = 1;\n\n  // payload_type encodes the type of payload, so that it can be deserialized\n  // deterministically.\n  bytes payload_type = 2;\n\n  // payload is the actual payload carried inside this envelope.\n  bytes payload = 3;\n\n  // signature is the signature produced by the private key corresponding to\n  // the enclosed public key, over the payload, prefixing a domain string for\n  // additional security.\n  bytes signature = 5;\n}\n`;\nmodule.exports = protons(message).Envelope;","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/libp2p/src/record/envelope/envelope.proto.js"],"names":["protons","require","message","module","exports","Envelope"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAMC,OAAO,GAAI;;;;;;;;;;;;;;;;;;CAAjB;AAoBAC,MAAM,CAACC,OAAP,GAAiBJ,OAAO,CAACE,OAAD,CAAP,CAAiBG,QAAlC","sourcesContent":["'use strict'\n\nconst protons = require('protons')\n\nconst message = `\nmessage Envelope {\n  // public_key is the public key of the keypair the enclosed payload was\n  // signed with.\n  bytes public_key = 1;\n\n  // payload_type encodes the type of payload, so that it can be deserialized\n  // deterministically.\n  bytes payload_type = 2;\n\n  // payload is the actual payload carried inside this envelope.\n  bytes payload = 3;\n\n  // signature is the signature produced by the private key corresponding to\n  // the enclosed public key, over the payload, prefixing a domain string for\n  // additional security.\n  bytes signature = 5;\n}\n`\n\nmodule.exports = protons(message).Envelope\n"]},"metadata":{},"sourceType":"script"}