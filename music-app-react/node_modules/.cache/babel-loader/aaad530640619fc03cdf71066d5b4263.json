{"ast":null,"code":"'use strict';\n\nconst protons = require('protons'); // PeerRecord messages contain information that is useful to share with other peers.\n// Currently, a PeerRecord contains the public listen addresses for a peer, but this\n// is expected to expand to include other information in the future.\n// PeerRecords are designed to be serialized to bytes and placed inside of\n// SignedEnvelopes before sharing with other peers.\n\n\nconst message = `\nmessage PeerRecord {\n    // AddressInfo is a wrapper around a binary multiaddr. It is defined as a\n    // separate message to allow us to add per-address metadata in the future.\n    message AddressInfo {\n        bytes multiaddr = 1;\n    }\n\n    // peer_id contains a libp2p peer id in its binary representation.\n    bytes peer_id = 1;\n\n    // seq contains a monotonically-increasing sequence counter to order PeerRecords in time.\n    uint64 seq = 2;\n\n    // addresses is a list of public listen addresses for the peer.\n    repeated AddressInfo addresses = 3;\n}\n`;\nmodule.exports = protons(message).PeerRecord;","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/libp2p/src/record/peer-record/peer-record.proto.js"],"names":["protons","require","message","module","exports","PeerRecord"],"mappings":"AAAA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB,C,CAEA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,OAAO,GAAI;;;;;;;;;;;;;;;;;CAAjB;AAmBAC,MAAM,CAACC,OAAP,GAAiBJ,OAAO,CAACE,OAAD,CAAP,CAAiBG,UAAlC","sourcesContent":["'use strict'\n\nconst protons = require('protons')\n\n// PeerRecord messages contain information that is useful to share with other peers.\n// Currently, a PeerRecord contains the public listen addresses for a peer, but this\n// is expected to expand to include other information in the future.\n// PeerRecords are designed to be serialized to bytes and placed inside of\n// SignedEnvelopes before sharing with other peers.\nconst message = `\nmessage PeerRecord {\n    // AddressInfo is a wrapper around a binary multiaddr. It is defined as a\n    // separate message to allow us to add per-address metadata in the future.\n    message AddressInfo {\n        bytes multiaddr = 1;\n    }\n\n    // peer_id contains a libp2p peer id in its binary representation.\n    bytes peer_id = 1;\n\n    // seq contains a monotonically-increasing sequence counter to order PeerRecords in time.\n    uint64 seq = 2;\n\n    // addresses is a list of public listen addresses for the peer.\n    repeated AddressInfo addresses = 3;\n}\n`\n\nmodule.exports = protons(message).PeerRecord\n"]},"metadata":{},"sourceType":"script"}