{"ast":null,"code":"var _jsxFileName = \"/home/user/orbit-playground/music-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nconst Ipfs = require('ipfs');\n\nconst OrbitDB = require('orbit-db');\n/*\ntry {\n  // Ipfs and OrbitDB wouldn't be global.\n} catch(e) {\n  console.log(\"Error: \", e);\n}\n*/\n// This will create an IPFS node and an OrbitDB database when new instance is created\n\n\nclass NewPiecePlease {\n  constructor(IPFS, OrbitDB) {\n    this.OrbitDB = OrbitDB;\n\n    (async () => {\n      console.log(\"IPFS object: \", IPFS);\n      this.node = await IPFS.create(); //this.node.on(\"error\", (e) => { throw (e) })\n      //this.node.on(\"ready\", this._init.bind(this))\n\n      this._init.bind(this);\n    })();\n  }\n\n  async _init() {\n    this.orbitdb = await this.OrbitDB.createInstance(this.node);\n    this.defaultOptions = {\n      accessController: {\n        write: [this.orbitdb.identity.publicKey]\n      }\n    };\n    const docStoreOptions = { ...this.defaultOptions,\n      indexBy: 'hash'\n    };\n    this.pieces = await this.orbitdb.docstore('pieces', docStoreOptions);\n    console.log(\"ID\", this.pieces.id); //this.onready();\n  }\n\n} // This is exporting the class\n\n\ntry {\n  module.exports = exports = new NewPiecePlease(Ipfs, OrbitDB);\n} catch (e) {\n  window.NPP = new NewPiecePlease(window.IPFS, window.OrbitDB);\n}\n\nclass App extends React.Component {\n  componentDidMount() {\n    //const NPP = require('./newpieceplease')\n    // Creating database instance\n    const NPP = new NewPiecePlease(Ipfs, OrbitDB);\n    console.log(\"Database instance:\", NPP); //console.log(\"Table ID: \", NPP.pieces.id)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }\n    }, \"This is an OrbitDB test.\"), /*#__PURE__*/React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Learn React\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/src/App.js"],"names":["React","Ipfs","require","OrbitDB","NewPiecePlease","constructor","IPFS","console","log","node","create","_init","bind","orbitdb","createInstance","defaultOptions","accessController","write","identity","publicKey","docStoreOptions","indexBy","pieces","docstore","id","module","exports","e","window","NPP","App","Component","componentDidMount","render","logo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;;AACA,MAAMC,IAAI,GAAGC,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AAEA;;;;;;;AAQA;;;AACA,MAAME,cAAN,CAAqB;AACnBC,EAAAA,WAAW,CAACC,IAAD,EAAOH,OAAP,EAAgB;AACzB,SAAKA,OAAL,GAAeA,OAAf;;AAEA,KAAC,YAAY;AACXI,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,IAA7B;AACA,WAAKG,IAAL,GAAY,MAAMH,IAAI,CAACI,MAAL,EAAlB,CAFW,CAIX;AACA;;AACA,WAAKC,KAAL,CAAWC,IAAX,CAAgB,IAAhB;AACD,KAPD;AAQD;;AAED,QAAMD,KAAN,GAAc;AACZ,SAAKE,OAAL,GAAe,MAAM,KAAKV,OAAL,CAAaW,cAAb,CAA4B,KAAKL,IAAjC,CAArB;AAEA,SAAKM,cAAL,GAAsB;AAAEC,MAAAA,gBAAgB,EAAE;AAAEC,QAAAA,KAAK,EAAE,CAAC,KAAKJ,OAAL,CAAaK,QAAb,CAAsBC,SAAvB;AAAT;AAApB,KAAtB;AAEA,UAAMC,eAAe,GAAG,EACtB,GAAG,KAAKL,cADc;AAEtBM,MAAAA,OAAO,EAAE;AAFa,KAAxB;AAIA,SAAKC,MAAL,GAAc,MAAM,KAAKT,OAAL,CAAaU,QAAb,CAAsB,QAAtB,EAAgCH,eAAhC,CAApB;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ,EAAkB,KAAKc,MAAL,CAAYE,EAA9B,EAVY,CAWZ;AACD;;AA1BkB,C,CA6BrB;;;AACA,IAAI;AACFC,EAAAA,MAAM,CAACC,OAAP,GAAiBA,OAAO,GAAG,IAAItB,cAAJ,CAAmBH,IAAnB,EAAyBE,OAAzB,CAA3B;AACD,CAFD,CAEE,OAAOwB,CAAP,EAAU;AACVC,EAAAA,MAAM,CAACC,GAAP,GAAa,IAAIzB,cAAJ,CAAmBwB,MAAM,CAACtB,IAA1B,EAAgCsB,MAAM,CAACzB,OAAvC,CAAb;AACD;;AAED,MAAM2B,GAAN,SAAkB9B,KAAK,CAAC+B,SAAxB,CAAkC;AAChCC,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA,UAAMH,GAAG,GAAG,IAAIzB,cAAJ,CAAmBH,IAAnB,EAAyBE,OAAzB,CAAZ;AACAI,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCqB,GAAlC,EAJkB,CAKlB;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,GAAG,EAAEC,IAAV;AAAgB,MAAA,SAAS,EAAC,UAA1B;AAAqC,MAAA,GAAG,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAFF,eAKE;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,IAAI,EAAC,qBAFP;AAGE,MAAA,MAAM,EAAC,QAHT;AAIE,MAAA,GAAG,EAAC,qBAJN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALF,CADF,CADF;AAkBD;;AA5B+B;;AA+BlC,eAAeJ,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nconst Ipfs = require('ipfs');\nconst OrbitDB = require('orbit-db');\n\n/*\ntry {\n  // Ipfs and OrbitDB wouldn't be global.\n} catch(e) {\n  console.log(\"Error: \", e);\n}\n*/\n\n// This will create an IPFS node and an OrbitDB database when new instance is created\nclass NewPiecePlease {\n  constructor(IPFS, OrbitDB) {\n    this.OrbitDB = OrbitDB;\n\n    (async () => {\n      console.log(\"IPFS object: \", IPFS)\n      this.node = await IPFS.create();\n\n      //this.node.on(\"error\", (e) => { throw (e) })\n      //this.node.on(\"ready\", this._init.bind(this))\n      this._init.bind(this);\n    })();\n  }\n\n  async _init() {\n    this.orbitdb = await this.OrbitDB.createInstance(this.node);\n\n    this.defaultOptions = { accessController: { write: [this.orbitdb.identity.publicKey] }}\n\n    const docStoreOptions = {\n      ...this.defaultOptions,\n      indexBy: 'hash',\n    }\n    this.pieces = await this.orbitdb.docstore('pieces', docStoreOptions);\n    console.log(\"ID\", this.pieces.id);\n    //this.onready();\n  }\n}\n\n// This is exporting the class\ntry {\n  module.exports = exports = new NewPiecePlease(Ipfs, OrbitDB);\n} catch (e) {\n  window.NPP = new NewPiecePlease(window.IPFS, window.OrbitDB);\n}\n\nclass App extends React.Component {\n  componentDidMount() {\n    //const NPP = require('./newpieceplease')\n    // Creating database instance\n    const NPP = new NewPiecePlease(Ipfs, OrbitDB);\n    console.log(\"Database instance:\", NPP)\n    //console.log(\"Table ID: \", NPP.pieces.id)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            This is an OrbitDB test.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}