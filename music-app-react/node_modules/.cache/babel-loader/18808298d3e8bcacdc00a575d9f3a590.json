{"ast":null,"code":"'use strict'; // Pubsub adapter to keep API with handlers while not removed.\n\nmodule.exports = (PubsubRouter, libp2p, options) => {\n  class Pubsub extends PubsubRouter {\n    /**\n     * Subscribes to a given topic.\n     * @override\n     * @param {string} topic\n     * @param {function(msg: InMessage)} [handler]\n     * @returns {void}\n     */\n    subscribe(topic, handler) {\n      // Bind provided handler\n      handler && this.on(topic, handler);\n      super.subscribe(topic);\n    }\n    /**\n     * Unsubscribe from the given topic.\n     * @override\n     * @param {string} topic\n     * @param {function(msg: InMessage)} [handler]\n     * @returns {void}\n     */\n\n\n    unsubscribe(topic, handler) {\n      if (!handler) {\n        this.removeAllListeners(topic);\n      } else {\n        this.removeListener(topic, handler);\n      }\n\n      if (this.listenerCount(topic) === 0) {\n        super.unsubscribe(topic);\n      }\n    }\n\n  }\n\n  return new Pubsub(libp2p, options);\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/libp2p/src/pubsub-adapter.js"],"names":["module","exports","PubsubRouter","libp2p","options","Pubsub","subscribe","topic","handler","on","unsubscribe","removeAllListeners","removeListener","listenerCount"],"mappings":"AAAA,a,CAEA;;AACAA,MAAM,CAACC,OAAP,GAAiB,CAACC,YAAD,EAAeC,MAAf,EAAuBC,OAAvB,KAAmC;AAClD,QAAMC,MAAN,SAAqBH,YAArB,CAAkC;AAChC;;;;;;;AAOAI,IAAAA,SAAS,CAAEC,KAAF,EAASC,OAAT,EAAkB;AACzB;AACAA,MAAAA,OAAO,IAAI,KAAKC,EAAL,CAAQF,KAAR,EAAeC,OAAf,CAAX;AACA,YAAMF,SAAN,CAAgBC,KAAhB;AACD;AAED;;;;;;;;;AAOAG,IAAAA,WAAW,CAAEH,KAAF,EAASC,OAAT,EAAkB;AAC3B,UAAI,CAACA,OAAL,EAAc;AACZ,aAAKG,kBAAL,CAAwBJ,KAAxB;AACD,OAFD,MAEO;AACL,aAAKK,cAAL,CAAoBL,KAApB,EAA2BC,OAA3B;AACD;;AAED,UAAI,KAAKK,aAAL,CAAmBN,KAAnB,MAA8B,CAAlC,EAAqC;AACnC,cAAMG,WAAN,CAAkBH,KAAlB;AACD;AACF;;AA/B+B;;AAkClC,SAAO,IAAIF,MAAJ,CAAWF,MAAX,EAAmBC,OAAnB,CAAP;AACD,CApCD","sourcesContent":["'use strict'\n\n// Pubsub adapter to keep API with handlers while not removed.\nmodule.exports = (PubsubRouter, libp2p, options) => {\n  class Pubsub extends PubsubRouter {\n    /**\n     * Subscribes to a given topic.\n     * @override\n     * @param {string} topic\n     * @param {function(msg: InMessage)} [handler]\n     * @returns {void}\n     */\n    subscribe (topic, handler) {\n      // Bind provided handler\n      handler && this.on(topic, handler)\n      super.subscribe(topic)\n    }\n\n    /**\n     * Unsubscribe from the given topic.\n     * @override\n     * @param {string} topic\n     * @param {function(msg: InMessage)} [handler]\n     * @returns {void}\n     */\n    unsubscribe (topic, handler) {\n      if (!handler) {\n        this.removeAllListeners(topic)\n      } else {\n        this.removeListener(topic, handler)\n      }\n\n      if (this.listenerCount(topic) === 0) {\n        super.unsubscribe(topic)\n      }\n    }\n  }\n\n  return new Pubsub(libp2p, options)\n}\n"]},"metadata":{},"sourceType":"script"}