{"ast":null,"code":"'use strict';\n\nconst Key = require('interface-datastore').Key;\n\nconst sortKeys = require('sort-keys');\n\nconst uint8ArrayToString = require('uint8arrays/to-string');\n\nconst uint8ArrayFromString = require('uint8arrays/from-string');\n\nconst specKey = new Key('datastore_spec');\n\nmodule.exports = store => {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     * @returns {Promise<bool>}\n     */\n    async exists() {\n      // eslint-disable-line require-await\n      return store.has(specKey);\n    },\n\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get() {\n      const buf = await store.get(specKey);\n      return JSON.parse(uint8ArrayToString(buf));\n    },\n\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     * @param {number} spec\n     * @returns {Promise<void>}\n     */\n    async set(spec) {\n      // eslint-disable-line require-await\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, {\n        deep: true\n      }))));\n    }\n\n  };\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/ipfs-repo/src/spec.js"],"names":["Key","require","sortKeys","uint8ArrayToString","uint8ArrayFromString","specKey","module","exports","store","exists","has","get","buf","JSON","parse","set","spec","put","stringify","deep"],"mappings":"AAAA;;AAEA,MAAMA,GAAG,GAAGC,OAAO,CAAC,qBAAD,CAAP,CAA+BD,GAA3C;;AACA,MAAME,QAAQ,GAAGD,OAAO,CAAC,WAAD,CAAxB;;AACA,MAAME,kBAAkB,GAAGF,OAAO,CAAC,uBAAD,CAAlC;;AACA,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,yBAAD,CAApC;;AAEA,MAAMI,OAAO,GAAG,IAAIL,GAAJ,CAAQ,gBAAR,CAAhB;;AAEAM,MAAM,CAACC,OAAP,GAAkBC,KAAD,IAAW;AAC1B,SAAO;AACL;;;;;AAKA,UAAMC,MAAN,GAAgB;AAAE;AAChB,aAAOD,KAAK,CAACE,GAAN,CAAUL,OAAV,CAAP;AACD,KARI;;AASL;;;;;AAKA,UAAMM,GAAN,GAAa;AACX,YAAMC,GAAG,GAAG,MAAMJ,KAAK,CAACG,GAAN,CAAUN,OAAV,CAAlB;AACA,aAAOQ,IAAI,CAACC,KAAL,CAAWX,kBAAkB,CAACS,GAAD,CAA7B,CAAP;AACD,KAjBI;;AAkBL;;;;;;AAMA,UAAMG,GAAN,CAAWC,IAAX,EAAiB;AAAE;AACjB,aAAOR,KAAK,CAACS,GAAN,CAAUZ,OAAV,EAAmBD,oBAAoB,CAACS,IAAI,CAACK,SAAL,CAAehB,QAAQ,CAACc,IAAD,EAAO;AAAEG,QAAAA,IAAI,EAAE;AAAR,OAAP,CAAvB,CAAD,CAAvC,CAAP;AACD;;AA1BI,GAAP;AA4BD,CA7BD","sourcesContent":["'use strict'\n\nconst Key = require('interface-datastore').Key\nconst sortKeys = require('sort-keys')\nconst uint8ArrayToString = require('uint8arrays/to-string')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\nconst specKey = new Key('datastore_spec')\n\nmodule.exports = (store) => {\n  return {\n    /**\n     * Check if a datastore spec file exists.\n     *\n     * @returns {Promise<bool>}\n     */\n    async exists () { // eslint-disable-line require-await\n      return store.has(specKey)\n    },\n    /**\n     * Get the current datastore spec.\n     *\n     * @returns {Promise<Uint8Array>}\n     */\n    async get () {\n      const buf = await store.get(specKey)\n      return JSON.parse(uint8ArrayToString(buf))\n    },\n    /**\n     * Set the datastore spec of the repo, writing it to the underlying store.\n     * TODO unclear on what the type should be or if it's required\n     * @param {number} spec\n     * @returns {Promise<void>}\n     */\n    async set (spec) { // eslint-disable-line require-await\n      return store.put(specKey, uint8ArrayFromString(JSON.stringify(sortKeys(spec, { deep: true }))))\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}