{"ast":null,"code":"'use strict';\n\nmodule.exports = class ApiManager {\n  /**\n   * @callback UndefFn\n   * @param {PropertyKey} prop\n   */\n\n  /**\n   * @template API\n   * @typedef {{ cancel(): any; api: API; }} Updated\n   */\n  constructor() {\n    this._api = {};\n    /**\n     * @type {UndefFn}\n     * @returns {any}\n     */\n\n    this._onUndef = () => undefined;\n\n    this.api = new Proxy(this._api, {\n      get: (_, prop) => {\n        if (prop === 'then') return undefined; // Not a promise!\n\n        return this._api[prop] === undefined ? this._onUndef(prop) : this._api[prop];\n      }\n    });\n  }\n  /**\n   * @template A\n   * @param {A} nextApi\n   * @param {UndefFn} [onUndef]\n   * @returns {Updated<A>}\n   */\n\n\n  update(nextApi, onUndef) {\n    const prevApi = { ...this._api\n    };\n    const prevUndef = this._onUndef;\n    Object.keys(this._api).forEach(k => {\n      delete this._api[k];\n    });\n    const api = Object.assign(this._api, nextApi);\n    if (onUndef) this._onUndef = onUndef;\n    return {\n      cancel: () => this.update(prevApi, prevUndef),\n      api\n    };\n  }\n\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app-react/node_modules/ipfs/src/core/api-manager.js"],"names":["module","exports","ApiManager","constructor","_api","_onUndef","undefined","api","Proxy","get","_","prop","update","nextApi","onUndef","prevApi","prevUndef","Object","keys","forEach","k","assign","cancel"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,MAAMC,UAAN,CAAiB;AAChC;;;;;AAKA;;;;AAKAC,EAAAA,WAAW,GAAI;AACb,SAAKC,IAAL,GAAY,EAAZ;AACA;;;;;AAIA,SAAKC,QAAL,GAAgB,MAAMC,SAAtB;;AACA,SAAKC,GAAL,GAAW,IAAIC,KAAJ,CAAU,KAAKJ,IAAf,EAAqB;AAC9BK,MAAAA,GAAG,EAAE,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAChB,YAAIA,IAAI,KAAK,MAAb,EAAqB,OAAOL,SAAP,CADL,CACsB;;AACtC,eAAO,KAAKF,IAAL,CAAUO,IAAV,MAAoBL,SAApB,GAAgC,KAAKD,QAAL,CAAcM,IAAd,CAAhC,GAAsD,KAAKP,IAAL,CAAUO,IAAV,CAA7D;AACD;AAJ6B,KAArB,CAAX;AAMD;AAED;;;;;;;;AAMAC,EAAAA,MAAM,CAAEC,OAAF,EAAWC,OAAX,EAAoB;AACxB,UAAMC,OAAO,GAAG,EAAE,GAAG,KAAKX;AAAV,KAAhB;AACA,UAAMY,SAAS,GAAG,KAAKX,QAAvB;AACAY,IAAAA,MAAM,CAACC,IAAP,CAAY,KAAKd,IAAjB,EAAuBe,OAAvB,CAA+BC,CAAC,IAAI;AAAE,aAAO,KAAKhB,IAAL,CAAUgB,CAAV,CAAP;AAAqB,KAA3D;AACA,UAAMb,GAAG,GAAGU,MAAM,CAACI,MAAP,CAAc,KAAKjB,IAAnB,EAAyBS,OAAzB,CAAZ;AACA,QAAIC,OAAJ,EAAa,KAAKT,QAAL,GAAgBS,OAAhB;AACb,WAAO;AAAEQ,MAAAA,MAAM,EAAE,MAAM,KAAKV,MAAL,CAAYG,OAAZ,EAAqBC,SAArB,CAAhB;AAAiDT,MAAAA;AAAjD,KAAP;AACD;;AAvC+B,CAAlC","sourcesContent":["'use strict'\n\nmodule.exports = class ApiManager {\n  /**\n   * @callback UndefFn\n   * @param {PropertyKey} prop\n   */\n\n  /**\n   * @template API\n   * @typedef {{ cancel(): any; api: API; }} Updated\n   */\n\n  constructor () {\n    this._api = {}\n    /**\n     * @type {UndefFn}\n     * @returns {any}\n     */\n    this._onUndef = () => undefined\n    this.api = new Proxy(this._api, {\n      get: (_, prop) => {\n        if (prop === 'then') return undefined // Not a promise!\n        return this._api[prop] === undefined ? this._onUndef(prop) : this._api[prop]\n      }\n    })\n  }\n\n  /**\n   * @template A\n   * @param {A} nextApi\n   * @param {UndefFn} [onUndef]\n   * @returns {Updated<A>}\n   */\n  update (nextApi, onUndef) {\n    const prevApi = { ...this._api }\n    const prevUndef = this._onUndef\n    Object.keys(this._api).forEach(k => { delete this._api[k] })\n    const api = Object.assign(this._api, nextApi)\n    if (onUndef) this._onUndef = onUndef\n    return { cancel: () => this.update(prevApi, prevUndef), api }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}