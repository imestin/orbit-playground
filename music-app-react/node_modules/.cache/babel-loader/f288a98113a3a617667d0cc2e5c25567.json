{"ast":null,"code":"'use strict';\n\nconst {\n  DAGNode\n} = require('ipld-dag-pb');\n\nconst {\n  withTimeoutOption\n} = require('../../../utils');\n\nconst uint8ArrayConcat = require('uint8arrays/concat');\n\nmodule.exports = ({\n  ipld,\n  gcLock,\n  preload\n}) => {\n  const get = require('../get')({\n    ipld,\n    preload\n  });\n\n  const put = require('../put')({\n    ipld,\n    gcLock,\n    preload\n  });\n\n  return withTimeoutOption(async function appendData(multihash, data, options) {\n    const node = await get(multihash, options);\n    const newData = uint8ArrayConcat([node.Data, data]);\n    return put(new DAGNode(newData, node.Links), options);\n  });\n};","map":{"version":3,"sources":["/home/user/orbit-playground/music-app/node_modules/ipfs/src/core/components/object/patch/append-data.js"],"names":["DAGNode","require","withTimeoutOption","uint8ArrayConcat","module","exports","ipld","gcLock","preload","get","put","appendData","multihash","data","options","node","newData","Data","Links"],"mappings":"AAAA;;AAEA,MAAM;AAAEA,EAAAA;AAAF,IAAcC,OAAO,CAAC,aAAD,CAA3B;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAwBD,OAAO,CAAC,gBAAD,CAArC;;AACA,MAAME,gBAAgB,GAAGF,OAAO,CAAC,oBAAD,CAAhC;;AAEAG,MAAM,CAACC,OAAP,GAAiB,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA;AAAhB,CAAD,KAA+B;AAC9C,QAAMC,GAAG,GAAGR,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEK,IAAAA,IAAF;AAAQE,IAAAA;AAAR,GAAlB,CAAZ;;AACA,QAAME,GAAG,GAAGT,OAAO,CAAC,QAAD,CAAP,CAAkB;AAAEK,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAAlB,CAAZ;;AAEA,SAAON,iBAAiB,CAAC,eAAeS,UAAf,CAA2BC,SAA3B,EAAsCC,IAAtC,EAA4CC,OAA5C,EAAqD;AAC5E,UAAMC,IAAI,GAAG,MAAMN,GAAG,CAACG,SAAD,EAAYE,OAAZ,CAAtB;AACA,UAAME,OAAO,GAAGb,gBAAgB,CAAC,CAACY,IAAI,CAACE,IAAN,EAAYJ,IAAZ,CAAD,CAAhC;AACA,WAAOH,GAAG,CAAC,IAAIV,OAAJ,CAAYgB,OAAZ,EAAqBD,IAAI,CAACG,KAA1B,CAAD,EAAmCJ,OAAnC,CAAV;AACD,GAJuB,CAAxB;AAKD,CATD","sourcesContent":["'use strict'\n\nconst { DAGNode } = require('ipld-dag-pb')\nconst { withTimeoutOption } = require('../../../utils')\nconst uint8ArrayConcat = require('uint8arrays/concat')\n\nmodule.exports = ({ ipld, gcLock, preload }) => {\n  const get = require('../get')({ ipld, preload })\n  const put = require('../put')({ ipld, gcLock, preload })\n\n  return withTimeoutOption(async function appendData (multihash, data, options) {\n    const node = await get(multihash, options)\n    const newData = uint8ArrayConcat([node.Data, data])\n    return put(new DAGNode(newData, node.Links), options)\n  })\n}\n"]},"metadata":{},"sourceType":"script"}